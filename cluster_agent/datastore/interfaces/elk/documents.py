from elasticsearch_dsl import Text, Float, Object, Boolean, Integer, Document

from cluster_agent.datastore.interfaces.elk.settings import ELASTICSEARCH_SETTINGS


class Jobs(Document):

    cluster_id = Integer()
    timestamp = Float()
    account = Text()
    accrue_time = Integer()
    admin_comment = Text()
    array_job_id = Integer()
    array_task_id = Integer()
    array_max_tasks = Integer()
    array_task_string = Text()
    association_id = Integer()
    batch_features = Text()
    batch_flag = Boolean()
    batch_host = Text()
    flags = Text()
    burst_buffer = Text()
    burst_buffer_state = Text()
    cluster = Text()
    cluster_features = Text()
    command = Text()
    comment = Text()
    contiguous = Boolean()
    core_spec = Text()
    thread_spec = Text()
    cores_per_socket = Text()
    billable_tres = Text()
    cpus_per_task = Integer()
    cpu_frequency_minimum = Text()
    cpu_frequency_maximum = Text()
    cpu_frequency_governor = Text()
    cpus_per_tres = Text()
    deadline = Integer()
    delay_boot = Integer()
    dependency = Text()
    derived_exit_code = Integer()
    eligible_time = Integer()
    end_time = Integer()
    excluded_nodes = Text()
    exit_code = Text()
    features = Text()
    federation_origin = Text()
    federation_siblings_active = Text()
    federation_siblings_viable = Text()
    gres_detail = Text()
    group_id = Integer()
    job_id = Integer()
    job_resources = Object(
        properties=dict(
            nodes=Text(),
            allocated_cpus=Integer(),
            allocated_hosts=Integer(),
            allocated_nodes=Object(properties={"memory": Integer()}),
        )
    )
    job_state = Text()
    last_sched_evaluation = Integer()
    licenses = Text()
    max_cpus = Integer()
    max_nodes = Integer()
    mcs_label = Text()
    memory_per_tres = Text()
    name = Text()
    nodes = Text()
    nice = Text()
    tasks_per_core = Integer()
    tasks_per_node = Integer()
    tasks_per_socket = Integer()
    tasks_per_board = Integer()
    cpus = Integer()
    node_count = Integer()
    tasks = Integer()
    het_job_id = Integer()
    het_job_id_set = Text()
    het_job_offset = Integer()
    partition = Text()
    memory_per_node = Integer()
    memory_per_cpu = Integer()
    minimum_cpus_per_node = Integer()
    minimum_tmp_disk_per_node = Integer()
    preempt_time = Integer()
    pre_sus_time = Integer()
    priority = Text()
    profile = Text()
    qos = Text()
    reboot = Boolean()
    required_nodes = Text()
    requeue = Boolean()
    resize_time = Integer()
    restart_cnt = Integer()
    resv_name = Text()
    shared = Text()
    show_flags = Text()
    sockets_per_board = Integer()
    sockets_per_node = Integer()
    start_time = Integer()
    state_description = Text()
    state_reason = Text()
    standard_error = Text()
    standard_input = Text()
    standard_output = Text()
    submit_time = Integer()
    suspend_time = Integer()
    system_comment = Text()
    time_limit = Integer()
    time_minimum = Integer()
    threads_per_core = Integer()
    tres_bind = Text()
    tres_freq = Text()
    tres_per_job = Text()
    tres_per_node = Text()
    tres_per_socket = Text()
    tres_per_task = Text()
    tres_req_str = Text()
    tres_alloc_str = Text()
    user_id = Integer()
    user_name = Text()
    wckey = Text()
    current_working_directory = Text()

    class Index:

        name = "jobs"
        settings = ELASTICSEARCH_SETTINGS.ELASTICSEARCH_QUERY_SETTINGS
